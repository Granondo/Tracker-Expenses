{"ast":null,"code":"var _jsxFileName = \"/Users/eagle/Documents/dev/JavaScript/react-complete-guide/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"\");\n\n  const filterChangeHandler = selectedYears => {\n    setFilteredYear(selectedYears);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses founddd.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expenseContent = filteredExpenses.length > 0 && filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangedFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), filteredExpenses.length === 0 && expenseContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"fpfqMasPiH7UJYbCjGKq4XakM58=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/eagle/Documents/dev/JavaScript/react-complete-guide/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYears","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","length","expenseContent","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMQ,mBAAmB,GAAIC,aAAD,IAAmB;AAC7CF,IAAAA,eAAe,CAACE,aAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBC,OAAD,IAAa;AACvD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;AACD,GAFwB,CAAzB;;AAIA,MAAIW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAIP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA9B,EAAiC;AAC/BC,IAAAA,cAAc,GACZT,gBAAgB,CAACQ,MAAjB,GAA0B,CAA1B,IACAR,gBAAgB,CAACU,GAAjB,CAAsBP,OAAD,iBACnB,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACQ,KAFjB;AAGE,MAAA,MAAM,EAAER,OAAO,CAACS,MAHlB;AAIE,MAAA,IAAI,EAAET,OAAO,CAACC;AAJhB,OACOD,OAAO,CAACU,EADf;AAAA;AAAA;AAAA;AAAA,YADF,CAFF;AAUD;;AAED,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,QAAQ,EAAEjB,YADZ;AAEE,QAAA,eAAe,EAAEE;AAFnB;AAAA;AAAA;AAAA;AAAA,cADF,EAKGE,gBAAgB,CAACQ,MAAjB,KAA4B,CAA5B,IAAiCC,cALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAtCQf,Q;;KAAAA,Q;AAwCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\n\nimport \"./Expenses.css\";\n\nfunction Expenses(props) {\n  const [filteredYear, setFilteredYear] = useState(\"\");\n\n  const filterChangeHandler = (selectedYears) => {\n    setFilteredYear(selectedYears);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesContent = <p>No expenses founddd.</p>\n\n  if (filteredExpenses.length > 0) {\n    expenseContent =\n      filteredExpenses.length > 0 &&\n      filteredExpenses.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ));\n  }\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangedFilter={filterChangeHandler}\n        />\n        {filteredExpenses.length === 0 && expenseContent}\n        {}\n      </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}